// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Components Snapshots should Button component renders correctly 1`] = `
<View
  style={
    [
      {
        "backgroundColor": "#FAFAFA",
      },
      [
        {
          "alignItems": "center",
          "borderRadius": 20,
          "elevation": 5,
          "justifyContent": "center",
          "maxHeight": 40,
          "shadowColor": "rgba(0,0,0,0.3)",
          "shadowOffset": {
            "height": 5,
            "width": 5,
          },
          "shadowRadius": 10,
        },
        undefined,
        {
          "borderColor": "rgba(0,0,0,0.3)",
          "borderWidth": 0.5,
        },
      ],
    ]
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "height": "100%",
        "justifyContent": "center",
        "paddingHorizontal": 20,
        "paddingVertical": 5,
        "width": "100%",
      }
    }
    testID="pressableTestID"
  >
    <Text
      style={
        [
          {
            "color": "#000",
          },
          [
            [
              {
                "fontSize": 16,
                "textAlign": "center",
              },
              {
                "opacity": 1,
              },
            ],
            {
              "fontFamily": "OpenSans",
            },
          ],
        ]
      }
    >
      test
    </Text>
  </View>
</View>
`;

exports[`Components Snapshots should HeaderButton component renders correctly 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  href="/?test=test"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "margin": 5,
    }
  }
>
  <Text />
</View>
`;

exports[`Components Snapshots should Loading component renders correctly 1`] = `
<View
  style={
    [
      {
        "backgroundColor": "#fff",
      },
      {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <Image
    source={1}
    style={
      {
        "height": 300,
        "width": 300,
      }
    }
  />
</View>
`;

exports[`Components Snapshots should PermissionModal component renders correctly 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  onDismiss={[Function]}
  transparent={true}
  visible={false}
/>
`;

exports[`Components Snapshots should Searchbar component renders correctly 1`] = `
<View
  style={
    [
      {
        "backgroundColor": "#fff",
      },
      [
        {
          "alignItems": "center",
          "borderRadius": 20,
          "flex": 1,
          "flexDirection": "row",
          "marginBottom": 5,
          "maxHeight": 40,
          "maxWidth": 500,
          "paddingHorizontal": 5,
          "width": "100%",
        },
        {
          "backgroundColor": "#fff",
          "borderColor": "rgba(0,0,0,0.3)",
          "borderWidth": 1,
        },
      ],
    ]
  }
>
  <Text />
  <TextInput
    cursorColor="#000"
    inputMode="text"
    onChangeText={[Function]}
    placeholder="a"
    placeholderTextColor="#7D7D7D"
    style={
      [
        {
          "width": "100%",
        },
        {
          "color": "#000",
        },
      ]
    }
  />
</View>
`;

exports[`Components Snapshots should SimpleModal component renders correctly 1`] = `
<Modal
  animationType="slide"
  hardwareAccelerated={false}
  transparent={true}
  visible={false}
/>
`;

exports[`Components Snapshots should TimeAgo component renders correctly 1`] = `
<Text
  style={
    [
      {
        "color": "#fff",
        "fontSize": 14,
        "opacity": 0.8,
      },
      {
        "fontFamily": "OpenSans",
      },
    ]
  }
>
  Há poucos segundos atrás
</Text>
`;
